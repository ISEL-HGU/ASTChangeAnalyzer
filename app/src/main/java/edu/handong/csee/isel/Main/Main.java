/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.handong.csee.isel.Main;

import edu.handong.csee.isel.ChangeAnalysis.ChangeAnalyzer;
import edu.handong.csee.isel.ChangeAnalysis.ChangeInfo;
import edu.handong.csee.isel.RepoMiner.ChangeMiner;
import edu.handong.csee.isel.RepoMiner.CommitMiner;
import org.checkerframework.checker.units.qual.C;
import org.eclipse.jgit.api.errors.GitAPIException;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;


public class Main {

    public static void main(String[] args) throws IOException {
    	Main main = new Main();
    	main.run(args);
    }

	private String os;
	private HashMap<String, String> fileHash;

    private void run(String[] args) throws IOException {
		checkOS();
		CLI option = new CLI();
		ArrayList<String> value = option.CommonCLI(args);

		if (value.size() == 0)
			return;

		CommitMiner commitMine;
		ChangeMiner changeMine = new ChangeMiner();
		ArrayList<ChangeInfo> changeInfoList = null;

		try {
			for (String str : value) {
				commitMine = new CommitMiner(str);
				changeMine.setRepo(commitMine.getRepo());
				changeMine.setLang(option.getLanguage());
				changeMine.setLevel(option.getLevel());
				changeMine.setDiffTool(option.getDiffTool());
				changeInfoList = changeMine.collect(commitMine.getCommitList());
			}
		} catch (IOException | GitAPIException e) {
			e.printStackTrace();
		}

		ChangeAnalyzer changeAnalyzer = new ChangeAnalyzer();
		fileHash = new HashMap<String, String>();
		for (ChangeInfo changeInfo : changeInfoList) {
			fileHash.put(changeAnalyzer.computeSHA256Hash(changeInfo.getHunks()),
					changeInfo.getProjectName() + "," + changeInfo.getCommitID());
		}

		System.out.println("HashMap(file level) size: " + fileHash.size());
    }

    private void checkOS() {
		String cmd;
    	if (System.getProperty("os.name").toUpperCase().contains("MAC")) {
            setOS("MAC");
			System.setProperty("gt.pp.path", new File("").getAbsolutePath()
					+ File.separator + "app"
					+ File.separator + "pythonparser"
					+ File.separator + "pythonparser");

			System.setProperty("gt.cgum.path", new File("").getAbsolutePath()
					+ File.separator + "app"
					+ File.separator + "cgum"
					+ File.separator + "cgum");

			cmd = "pip3 install -r " + new File("").getAbsolutePath()
                    + File.separator + "app"
                    + File.separator + "pythonparser"
                    + File.separator + "requirements.txt";
        } else {
			setOS("LINUX");
			System.setProperty("gt.pp.path", "../../../../pythonparser/pythonparser");
			System.setProperty("gt.cgum.path", "/data/CGYW/ASTChangeAnalyzer/app/cgum/cgum");
			cmd = "pip3 install -r ../../../../pythonparser/requirements.txt";
        }
		CommandLineExecutor cli = new CommandLineExecutor();
		cli.executeSettings(cmd);
    }

	public void setOS(String os) {
		this.os = os;
	}

}

