/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.handong.csee.isel.Main;

import edu.handong.csee.isel.ChangeAnalysis.ChangeAnalyzer;
import edu.handong.csee.isel.RepoMiner.ChangeMiner;
import edu.handong.csee.isel.RepoMiner.CommitMiner;

import java.io.File;
import java.util.ArrayList;


public class Main {

	private String os;
	private String language;
	private String DiffTool;
	private String input;

    public static void main(String[] args) {
    	Main main = new Main();
		main.run(args);
    }

    private void run(String[] args) {
		checkOS();
		CLI option = new CLI();
		ArrayList<String> inputs = option.CommonCLI(args);
		language = option.getLanguage();
		DiffTool = option.getDiffTool();
		input = option.getOptionValueP();

		if (inputs.size() == 0)
			return;

		CommitMiner commitMine;
		ChangeMiner changeMine;
		ChangeAnalyzer changeAnalyzer = new ChangeAnalyzer();

		for (String str : inputs) {
			try {
				System.out.println(str);
				System.out.print("ASTChangeAnalyzing...");
				commitMine = new CommitMiner(str);
				if (commitMine.isCompleted()) {
					System.out.print("Change Mining...");
					changeMine = new ChangeMiner();
					changeMine.setProperties(commitMine.getRepo(), language, DiffTool);
					changeMine.collect(commitMine.getCommitList(), changeAnalyzer);
					System.out.println("Finished\n");
				}
			} catch (Exception e) {
				e.printStackTrace();
				continue;
			}
		}
		changeAnalyzer.printResult(input);
    }

	private void setOS(String os) {
		this.os = os;
	}

	private void checkOS() {
		String cmd;
    	if (System.getProperty("os.name").toUpperCase().contains("MAC")) {
            setOS("MAC");
			System.setProperty("gt.pp.path", new File("").getAbsolutePath()
					+ File.separator + "app"
					+ File.separator + "pythonparser"
					+ File.separator + "pythonparser");

			System.setProperty("gt.cgum.path", new File("").getAbsolutePath()
					+ File.separator + "app"
					+ File.separator + "cgum"
					+ File.separator + "cgum");

			cmd = "pip3 install -r " + new File("").getAbsolutePath()
                    + File.separator + "app"
                    + File.separator + "pythonparser"
                    + File.separator + "requirements.txt";
        } else {
			setOS("LINUX");
			System.setProperty("gt.pp.path", "../../../../pythonparser/pythonparser");
			System.setProperty("gt.cgum.path", "/data/CGYW/ASTChangeAnalyzer/app/cgum/cgum");
			cmd = "pip3 install -r ../../../../pythonparser/requirements.txt";
        }
		CommandLineExecutor cli = new CommandLineExecutor();
		cli.executeSettings(cmd);
    }

}

